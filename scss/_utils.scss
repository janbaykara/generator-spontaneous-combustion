/* ---------- ==========================================
    Utility string literals
*/

$placeholder: #{'::-webkit-input-placeholder, :-moz-placeholder, ::-moz-placeholder, :-ms-input-placeholder'};
$inputs: #{'input[type='text'], input[type='password'], input[type='date'], input[type='datetime'], input[type='datetime-local'], input[type='month'], input[type='week'], input[type='email'], input[type='number'], input[type='search'], input[type='tel'], input[type='time'], input[type='url'], input[type='color'], textarea'};

/* ---------- ==========================================
    Utility classes
*/

.clearfix {
    *zoom: 1;

    &:before, &:after {
        content: ' ';
        display: table;
    }

    &:after {
        clear: both;
    }
}

/* ---------- ==========================================
    Utility mixins
*/

@mixin tight-lines($ln: '1em') {
  *, 
  & * { 
    line-height: #{$ln} !important; 
  }
}

@mixin selection-style($background,$color)
{
  ::-moz-selection { color: $color;  background: $background; }
  ::selection      { color: $color;  background: $background; } 
}

@mixin margin-auto()
{
  margin-left: auto;
  margin-right: auto;
}

$golden-ratio: 1.61803398875;
@mixin golden-ratio($this: major,$length: 100%)
{
  if: $this = major { $gr-length: $length / $golden-ratio; }
  if: $this = minor { $gr-length: $length - ($length / $golden-ratio); }
}

@mixin img-responsive($display: block)
{
  display: $display;
  max-width: 100%; // Part 1: Set a maximum relative to the parent
  height: auto; // Part 2: Scale the height according to the width, otherwise you get stretching
}

@mixin padding-h($a, $b: #{$a})
{  padding-top: $a;   padding-bottom: $b; }

@mixin padding-w($a, $b: #{$a})
{  padding-left: $a;   padding-right: $b; }


@mixin margin-h($a, $b: #{$a})
{  margin-top: $a;   margin-bottom: $b; }

@mixin margin-w($a, $b: #{$a})
{  margin-left: $a;   margin-right: $b; }


@mixin prevent-text-breakouts()
{
  -ms-word-break: break-all;
      word-break: break-all;
      word-break: break-word;
  -webkit-hyphens: auto;
     -moz-hyphens: auto;
          hyphens: auto;
}
@mixin background-cover($url, $color:black, $posnx:50%, $posny:50%, $attachment:fixed)
{
    background-color: $color;
    background-image: url($url);
    background-position-x: $posnx;
    background-position-y: $posny;
    background-repeat-x: no-repeat;
    background-repeat-y: no-repeat;
    background-attachment: $attachment;
    background-origin: initial;
    background-clip: initial;
    -webkit-background-size: cover;
    -moz-background-size: cover;
    -o-background-size: cover;
    background-size: cover;
}

@mixin background-clip($argument: padding-box)
{
    -moz-background-clip: $argument;
    -webkit-background-clip: $argument;
    background-clip: $argument;
}

@mixin border-radius($radius: 2px)
{
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    border-radius: $radius;
}

@mixin border-radius-multi($topright: 0, $bottomright: 0, $bottomleft: 0, $topleft: 0)
{
    -webkit-border-top-right-radius: $topright;
    -webkit-border-bottom-right-radius: $bottomright;
    -webkit-border-bottom-left-radius: $bottomleft;
    -webkit-border-top-left-radius: $topleft;
    -moz-border-radius-topright: $topright;
    -moz-border-radius-bottomright: $bottomright;
    -moz-border-radius-bottomleft: $bottomleft;
    -moz-border-radius-topleft: $topleft;
    border-top-right-radius: $topright;
    border-bottom-right-radius: $bottomright;
    border-bottom-left-radius: $bottomleft;
    border-top-left-radius: $topleft;
    @include background-clip(padding-box);
}

@mixin opacity($opacity: 0.5)
{
    -moz-opacity: $opacity;
    -khtml-opacity: $opacity;
    -webkit-opacity: $opacity;
    opacity: $opacity;
    $opperc: $opacity * 100;
    -ms-filter: #{'progid:DXImageTransform.Microsoft.Alpha(opacity='$opperc')'};
    filter: #{'alpha(opacity='$opperc')'};
}

@mixin transition-duration($duration: 0.2s)
{
    -moz-transition-duration: $duration;
    -webkit-transition-duration: $duration;
    -o-transition-duration: $duration;
    transition-duration: $duration;
}

@mixin transition($duration:0.2s, $target:all, $ease:ease-out)
{
    -webkit-transition: $duration $target $ease;
    -moz-transition: $duration $target $ease;
    -o-transition: $duration $target $ease;
    transition: $duration $target $ease;
}

@mixin no-transition()
{ @include transition(0); }

@mixin transform($arguments...)
{
    -webkit-transform: $arguments;
    -moz-transform: $arguments;
    -o-transform: $arguments;
    -ms-transform: $arguments;
    transform: $arguments;
}

@mixin rotation($deg:5deg)
{
    @include transform(rotate($deg));
}

@mixin scale($ratio:1.5)
{
    @include transform(scale($ratio));
}

@mixin inner-shadow($horizontal:0, $vertical:1px, $blur:2px, $alpha: 0.4)
{
    -webkit-box-shadow: inset $horizontal $vertical $blur rgba(0, 0, 0, $alpha);
    -moz-box-shadow: inset $horizontal $vertical $blur rgba(0, 0, 0, $alpha);
    box-shadow: inset $horizontal $vertical $blur rgba(0, 0, 0, $alpha);
}

@mixin box-shadow($arguments)
{
    -webkit-box-shadow: $arguments;
    -moz-box-shadow: $arguments;
    box-shadow: $arguments;
}

@mixin box-sizing($sizing: border-box)
{
    -ms-box-sizing: $sizing;
    -moz-box-sizing: $sizing;
    -webkit-box-sizing: $sizing;
    box-sizing: $sizing;
}

@mixin user-select($argument: none)
{
    -webkit-user-select: $argument;
    -moz-user-select: $argument;
    -ms-user-select: $argument;
    -o-user-select: none;
    user-select: $argument;
}

@mixin translate($x:0, $y:0)
{
    @include transform(translate($x, $y));
}

@mixin no-webkit-form()
{
    input, select {
    -webkit-appearance: none;
    border: none;
    background: none;
    color: grey;
    font: inherit;
    display: inline;
    padding: 0px;
    margin: 0px;
    width: auto;
      
    :focus {
      outline: none !important;
    }
  }
}